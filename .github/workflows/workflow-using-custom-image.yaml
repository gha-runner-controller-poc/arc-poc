name: Workflow with Custom Image

on:
  workflow_dispatch:

jobs:
  optimized-run:
    runs-on: custom-poc-runners
    env:
      APPID: ${{ secrets.APPID }}
      PASSWORD: ${{ secrets.PASSWORD }}
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Start Timer
        id: start
        run: |
          START_EPOCH=$(date +%s)
          START_HUMAN=$(date -d "@$START_EPOCH" +%T)

          echo "start_time=$START_EPOCH" >> $GITHUB_ENV
          echo "start_time_human=$START_HUMAN" >> $GITHUB_ENV

          echo "ðŸŸ¢ Start Time (Epoch): $START_EPOCH" >> $GITHUB_STEP_SUMMARY
          echo "ðŸŸ¢ Start Time (Human): $START_HUMAN" >> $GITHUB_STEP_SUMMARY

      - name: Run CLI Tools
        run: |
          echo "Verifying preinstalled tools..."
          echo "Terraform: $(terraform -version)"
          echo "Node: $(node -v)"
          echo "jq: $(jq --version)"
          echo "Git: $(git --version)"
          echo "Curl: $(curl --version)"
          echo "gettext: $(gettext --version)"

      - name: Prepare tfvars file with secrets
        working-directory: terraform
        run: |
          echo "Substituting secrets into providers.tfvars..."
          envsubst < providers.tfvars > providers-substituted.tfvars
          echo "providers.tfvars file updated with secrets."

      - name: Terraform Init
        working-directory: terraform
        run: terraform init

      - name: Terraform Plan
        working-directory: terraform
        run: terraform plan -var-file=providers-substituted.tfvars

      # - name: Terraform Apply (auto-approve)
      #   working-directory: terraform
      #   run: terraform apply -auto-approve -var-file=providers-substituted.tfvars

      - name: End Timer & Report Duration
        env:
          start_time: ${{ env.start_time }}
        run: |
          END_EPOCH=$(date +%s)
          END_HUMAN=$(date -d "@$END_EPOCH" +%T)

          echo "end_time=$END_EPOCH" >> $GITHUB_ENV
          echo "end_time_human=$END_HUMAN" >> $GITHUB_ENV

          DURATION=$((END_EPOCH - start_time))
          DURATION_HUMAN=$(printf '%02d:%02d:%02d\n' $((DURATION/3600)) $(( (DURATION%3600)/60 )) $((DURATION%60)))

          echo "ðŸ”´ End Time (Epoch): $END_EPOCH" >> $GITHUB_STEP_SUMMARY
          echo "ðŸ”´ End Time (Human): $END_HUMAN" >> $GITHUB_STEP_SUMMARY
          echo "ðŸ•’ Duration (Seconds): $DURATION" >> $GITHUB_STEP_SUMMARY
          echo "ðŸ•’ Duration (HH:MM:SS): $DURATION_HUMAN" >> $GITHUB_STEP_SUMMARY
