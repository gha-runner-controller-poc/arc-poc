name: Baseline - Ubuntu Latest with Full Setup

on:
  workflow_dispatch:

jobs:
  baseline:
    runs-on: custom-poc-runners-ss

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Start timer
        id: start_time
        run: |
          START_EPOCH=$(date +%s)
          START_HUMAN=$(date -d "@$START_EPOCH" +%T)

          echo "start_time=$START_EPOCH" >> $GITHUB_ENV
          echo "start_time_human=$START_HUMAN" >> $GITHUB_ENV

          echo "ðŸŸ¢ Start Time (Epoch): $START_EPOCH" >> $GITHUB_STEP_SUMMARY
          echo "ðŸŸ¢ Start Time (Human): $START_HUMAN" >> $GITHUB_STEP_SUMMARY

      - name: Install All Tools
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            curl \
            wget \
            unzip \
            jq \
            git \
            gettext \
            gnupg \
            software-properties-common \
            python3 \
            python3-pip \
            nodejs \
            npm \
            ca-certificates

          # Install Terraform
          curl -fsSL https://apt.releases.hashicorp.com/gpg | gpg --dearmor -o hashicorp-archive-keyring.gpg
          sudo install -o root -g root -m 0644 hashicorp-archive-keyring.gpg /usr/share/keyrings/
          echo "deb [signed-by=/usr/share/keyrings/hashicorp-archive-keyring.gpg] https://apt.releases.hashicorp.com $(lsb_release -cs) main" | \
            sudo tee /etc/apt/sources.list.d/hashicorp.list
          sudo apt-get update && sudo apt-get install -y terraform

          # Install kubectl
          curl -LO "https://dl.k8s.io/release/$(curl -sL https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
          sudo install -o root -g root -m 0755 kubectl /usr/local/bin/kubectl
          rm kubectl

      - name: Show Installed Versions
        run: |
          echo "Terraform: $(terraform -version)"
          echo "kubectl: $(kubectl version --client=true --short)"
          echo "Node: $(node -v)"
          echo "Python: $(python3 --version)"
          echo "jq: $(jq --version)"
          echo "Git: $(git --version)"

          - name: End Timer & Report Duration
          env:
            start_time: ${{ env.start_time }}
          run: |
            END_EPOCH=$(date +%s)
            END_HUMAN=$(date -d "@$END_EPOCH" +%T)
  
            echo "end_time=$END_EPOCH" >> $GITHUB_ENV
            echo "end_time_human=$END_HUMAN" >> $GITHUB_ENV
  
            DURATION=$((END_EPOCH - start_time))
            DURATION_HUMAN=$(printf '%02d:%02d:%02d\n' $((DURATION/3600)) $(( (DURATION%3600)/60 )) $((DURATION%60)))
  
            echo "ðŸ”´ End Time (Epoch): $END_EPOCH" >> $GITHUB_STEP_SUMMARY
            echo "ðŸ”´ End Time (Human): $END_HUMAN" >> $GITHUB_STEP_SUMMARY
            echo "ðŸ•’ Duration (Seconds): $DURATION" >> $GITHUB_STEP_SUMMARY
            echo "ðŸ•’ Duration (HH:MM:SS): $DURATION_HUMAN" >> $GITHUB_STEP_SUMMARY
